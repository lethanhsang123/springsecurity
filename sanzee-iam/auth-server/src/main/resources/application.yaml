
spring:
  application:
    name: auth-server
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/auth_server?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    username: admin
    password: admin
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: none # Important: disable Hibernate auto-generation
    show-sql: true
  sql:
    init:
      mode: never  # Always run schema.sql and data.sql
      platform: mysql
      continue-on-error: false
      data-locations: classpath:/datasource/data.sql
      schema-locations: classpath:/datasource/schema.sql
      username: admin
      password: admin
#  security:
#    oauth2:
#      client:
#        registration:
#          google-idp:
#            provider: google
#            client-id: ${GOOGLE_CLIENT_ID:google-client-id}
#            client-secret: ${GOOGLE_CLIENT_SECRET:google-client-secret}
#            scope: openid, https://www.googleapis.com/auth/userinfo.profile, https://www.googleapis.com/auth/userinfo.email
#            client-name: Sign in with Google
#          github-idp:
#            provider: github
#            client-id: ${GITHUB_CLIENT_ID:github-client-id}
#            client-secret: ${GITHUB_CLIENT_SECRET:github-client-secret}
#            scope: user:email, read:user
#            client-name: Sign in with GitHub
#        provider:
#          google:
#            user-name-attribute: email
#          github:
#            user-name-attribute: login
server:
  port: 9000
  servlet:
    session:
      tracking-modes: cookie
logging:
  level:
    root: INFO
    org.springframework.web: TRACE
    org.springframework.security: TRACE
    org.springframework.security.oauth2: INFO